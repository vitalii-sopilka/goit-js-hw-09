{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAqCtC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAGpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CA9CKN,SAASC,cAAc,UAE/Bc,iBAAiB,SAE3B,SAA6BC,GAC3BA,EAAEC,iBAOF,SAAoBC,EAAOC,EAAMC,GAC/B,IAAK,IAAIC,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACvDjB,EAAciB,EAAUH,GACrBI,MAAK,EAACjB,SAAEA,EAAUS,MAAAS,MACjBC,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBrB,QAAiBkB,MAAW,CAE/CI,QAAS,KAEZ,IAEFC,OAAM,EAACvB,SAAEA,EAAUS,MAAAe,MAClBL,EAAA3B,GAAS4B,OAAOK,QACd,sBAAoBzB,QAAewB,MAAW,CAE5CF,QAAS,KAEZ,IAEHT,GAASC,C,CAzBbY,CACEC,OAAOjC,EAAMkC,OACbD,OAAO9B,EAAK+B,OACZD,OAAO7B,EAAO8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst btnSubmit = document.querySelector('button');\n\nbtnSubmit.addEventListener('click', startCreatePromises);\n\nfunction startCreatePromises(e) {\n  e.preventDefault();\n  getNumbers(\n    Number(delay.value),\n    Number(step.value),\n    Number(amount.value)\n  );\n  \n  function getNumbers(delay, step, amount) {\n    for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          {\n            timeout: 2000,\n          },\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          {\n            timeout: 2000,\n          },\n        );\n      })\n      delay += step;\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","delay1","step1","amount1","position1","then","delay2","$parcel$interopDefault","Notify","success","timeout","catch","delay3","failure","getNumbers","Number","value"],"version":3,"file":"03-promises.81ee6ea6.js.map"}